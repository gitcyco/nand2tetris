// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_eqJMP0
D;JEQ
@0
D=A
@SP
A=M
M=D
@StackTest_eqEND1
0;JMP
(StackTest_eqJMP0)
@0
D=A
@SP
A=M
M=D-1
(StackTest_eqEND1)
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_eqJMP2
D;JEQ
@0
D=A
@SP
A=M
M=D
@StackTest_eqEND3
0;JMP
(StackTest_eqJMP2)
@0
D=A
@SP
A=M
M=D-1
(StackTest_eqEND3)
@SP
M=M+1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_eqJMP4
D;JEQ
@0
D=A
@SP
A=M
M=D
@StackTest_eqEND5
0;JMP
(StackTest_eqJMP4)
@0
D=A
@SP
A=M
M=D-1
(StackTest_eqEND5)
@SP
M=M+1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_ltJMP0
D;JLT
@0
D=A
@SP
A=M
M=D
@StackTest_ltEND1
0;JMP
(StackTest_ltJMP0)
@0
D=A
@SP
A=M
M=D-1
(StackTest_ltEND1)
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_ltJMP2
D;JLT
@0
D=A
@SP
A=M
M=D
@StackTest_ltEND3
0;JMP
(StackTest_ltJMP2)
@0
D=A
@SP
A=M
M=D-1
(StackTest_ltEND3)
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_ltJMP4
D;JLT
@0
D=A
@SP
A=M
M=D
@StackTest_ltEND5
0;JMP
(StackTest_ltJMP4)
@0
D=A
@SP
A=M
M=D-1
(StackTest_ltEND5)
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_gtJMP0
D;JGT
@0
D=A
@SP
A=M
M=D
@StackTest_gtEND1
0;JMP
(StackTest_gtJMP0)
@0
D=A
@SP
A=M
M=D-1
(StackTest_gtEND1)
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_gtJMP2
D;JGT
@0
D=A
@SP
A=M
M=D
@StackTest_gtEND3
0;JMP
(StackTest_gtJMP2)
@0
D=A
@SP
A=M
M=D-1
(StackTest_gtEND3)
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_gtJMP4
D;JGT
@0
D=A
@SP
A=M
M=D
@StackTest_gtEND5
0;JMP
(StackTest_gtJMP4)
@0
D=A
@SP
A=M
M=D-1
(StackTest_gtEND5)
@SP
M=M+1
// push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D+M
@SP
M=M+1
// push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
// neg
@SP
M=M-1
A=M
M=-M
@SP
M=M+1
// and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D&M
@SP
M=M+1
// push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D|M
@SP
M=M+1
// not
@SP
M=M-1
A=M
M=!M
@SP
M=M+1