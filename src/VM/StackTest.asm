// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_JMP0_eq
D;JEQ
@0
D=A
@SP
A=M
M=D
@StackTest_END1_eq
0;JMP
(StackTest_JMP0_eq)
@0
D=A
@SP
A=M
M=D-1
(StackTest_END1_eq)
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_JMP2_eq
D;JEQ
@0
D=A
@SP
A=M
M=D
@StackTest_END3_eq
0;JMP
(StackTest_JMP2_eq)
@0
D=A
@SP
A=M
M=D-1
(StackTest_END3_eq)
@SP
M=M+1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_JMP4_eq
D;JEQ
@0
D=A
@SP
A=M
M=D
@StackTest_END5_eq
0;JMP
(StackTest_JMP4_eq)
@0
D=A
@SP
A=M
M=D-1
(StackTest_END5_eq)
@SP
M=M+1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_JMP6_lt
D;JLT
@0
D=A
@SP
A=M
M=D
@StackTest_END7_lt
0;JMP
(StackTest_JMP6_lt)
@0
D=A
@SP
A=M
M=D-1
(StackTest_END7_lt)
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_JMP8_lt
D;JLT
@0
D=A
@SP
A=M
M=D
@StackTest_END9_lt
0;JMP
(StackTest_JMP8_lt)
@0
D=A
@SP
A=M
M=D-1
(StackTest_END9_lt)
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_JMP10_lt
D;JLT
@0
D=A
@SP
A=M
M=D
@StackTest_END11_lt
0;JMP
(StackTest_JMP10_lt)
@0
D=A
@SP
A=M
M=D-1
(StackTest_END11_lt)
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_JMP12_gt
D;JGT
@0
D=A
@SP
A=M
M=D
@StackTest_END13_gt
0;JMP
(StackTest_JMP12_gt)
@0
D=A
@SP
A=M
M=D-1
(StackTest_END13_gt)
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_JMP14_gt
D;JGT
@0
D=A
@SP
A=M
M=D
@StackTest_END15_gt
0;JMP
(StackTest_JMP14_gt)
@0
D=A
@SP
A=M
M=D-1
(StackTest_END15_gt)
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
D=D-A
@StackTest_JMP16_gt
D;JGT
@0
D=A
@SP
A=M
M=D
@StackTest_END17_gt
0;JMP
(StackTest_JMP16_gt)
@0
D=A
@SP
A=M
M=D-1
(StackTest_END17_gt)
@SP
M=M+1
// push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D+M
@SP
M=M+1
// push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
// neg
@SP
M=M-1
A=M
M=-M
@SP
M=M+1
// and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D&M
@SP
M=M+1
// push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D|M
@SP
M=M+1
// not
@SP
M=M-1
A=M
M=!M
@SP
M=M+1